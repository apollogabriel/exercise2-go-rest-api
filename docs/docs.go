// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/adduser/": {
            "post": {
                "description": "Add login credentials http://localhost:3000/login/     {\"username\":\"admin\",\"password\",\"iloveadmin\",\"account_status\":\"Y\",\"account_group\":\"A\",\"email\":your@email.com}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adduser"
                ],
                "summary": "Add User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Y",
                        "name": "account_status",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "A",
                        "name": "account_group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email Add",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "add status",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login/": {
            "get": {
                "description": "Login Verify status endpoint http://localhost:3000/login/?name=admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Verify User status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login status",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update login credentials http://localhost:3000/login/     {\"username\":\"admin\",\"password\",\"iloveadmin\",\"account_status\":\"Y\",\"account_group\":\"A\",\"email\":your@email.com}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adduser"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Y",
                        "name": "account_status",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "A",
                        "name": "account_group",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email Add",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "update status",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Login endpoint  http://localhost:3000/login/     [{\"username\":\"admin\",\"password\",\"iloveadmin\"}]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "Returns login username and password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login status",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete credentials  http://localhost:3000/login/1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "delete"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete status",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Inventory API",
	Description:      "Login API with Swagger in Go",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
